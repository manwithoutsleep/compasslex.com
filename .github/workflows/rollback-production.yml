name: üö® Rollback Production Environment

on:
  workflow_dispatch:
    inputs:
      confirm_rollback:
        description: '‚ö†Ô∏è PRODUCTION ROLLBACK: Type "ROLLBACK-PRODUCTION" to confirm'
        required: true
        type: string
      reason:
        description: 'Reason for rollback (required for audit trail)'
        required: true
        type: string

jobs:
  rollback-production:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate rollback confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_rollback }}" != "ROLLBACK-PRODUCTION" ]; then
          echo "‚ùå PRODUCTION ROLLBACK CANCELLED"
          echo "You must type 'ROLLBACK-PRODUCTION' to confirm this action."
          exit 1
        fi
        echo "üö® PRODUCTION ROLLBACK CONFIRMED"
        echo "Reason: ${{ github.event.inputs.reason }}"
        echo "Proceeding with production restoration..."
        
    - name: Rollback production environment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Check if backup exists
          if [ ! -d "public_html/compasslex.com_backup" ]; then
            echo "‚ùå CRITICAL ERROR: No backup found at public_html/compasslex.com_backup"
            echo "Cannot perform production rollback without a backup."
            echo "üö® PRODUCTION ROLLBACK FAILED - NO BACKUP AVAILABLE"
            exit 1
          fi
          
          echo "üö® PRODUCTION ROLLBACK IN PROGRESS"
          echo "üì¶ Backup found. Starting rollback process..."
          echo "Reason: ${{ github.event.inputs.reason }}"
          
          # Create a backup of current production state before rollback
          if [ -d "public_html/compasslex.com_pre_rollback" ]; then
            rm -rf public_html/compasslex.com_pre_rollback
          fi
          if [ -d "public_html/compasslex.com" ]; then
            cp -r public_html/compasslex.com public_html/compasslex.com_pre_rollback
            echo "üíæ Current production state backed up to compasslex.com_pre_rollback"
          fi
          
          # Remove current production files (preserve .htaccess)
          find public_html/compasslex.com -type f ! -name '.htaccess' -delete
          find public_html/compasslex.com -type d -empty -delete
          
          # Restore from backup (preserve .htaccess)
          cp -r public_html/compasslex.com_backup/* public_html/compasslex.com/
          # Don't overwrite .htaccess if it exists in current production
          if [ -f "public_html/compasslex.com_pre_rollback/.htaccess" ]; then
            cp public_html/compasslex.com_pre_rollback/.htaccess public_html/compasslex.com/
            echo "üîí Preserved production .htaccess file"
          fi
          
          echo "‚úÖ PRODUCTION ROLLBACK COMPLETED"
          echo "üåê Production site restored from previous backup"
          echo "üí° Previous production backed up to compasslex.com_pre_rollback"
          
    - name: Production rollback summary
      run: |
        echo "üö® PRODUCTION ENVIRONMENT ROLLBACK COMPLETED!"
        echo ""
        echo "üìç What happened:"
        echo "  ‚Ä¢ compasslex.com restored from backup"
        echo "  ‚Ä¢ Previous production saved to compasslex.com_pre_rollback"
        echo "  ‚Ä¢ .htaccess file preserved"
        echo ""
        echo "üìã Rollback details:"
        echo "  ‚Ä¢ Triggered by: ${{ github.actor }}"
        echo "  ‚Ä¢ Reason: ${{ github.event.inputs.reason }}"
        echo "  ‚Ä¢ Time: $(date)"
        echo ""
        echo "üåê Your live site should now be accessible at compasslex.com"
        echo ""
        echo "‚ö†Ô∏è  IMPORTANT: Verify the site is working correctly!"